language: java
dist: focal
group: edge

env:
  global:
    - ANDROID_SDK_CMD_TOOLS=commandlinetools-linux-7583922_latest.zip

before_install:
  - openssl aes-256-cbc -K $encrypted_f761570c4ae9_key -iv $encrypted_f761570c4ae9_iv -in app/google-services.json.enc -out app/google-services.json -d
  # download and unzip Android SDK command line tools
  - wget -nv https://dl.google.com/android/repository/$ANDROID_SDK_CMD_TOOLS
  - mkdir -p $HOME/sdk/cmdline-tools && unzip -q $ANDROID_SDK_CMD_TOOLS -d $HOME/sdk/cmdline-tools
  - mv $HOME/sdk/cmdline-tools/cmdline-tools $HOME/sdk/cmdline-tools/latest
  # set SDK tools path variable and ANDROID_HOME
  - export PATH=$PATH:$HOME/sdk/cmdline-tools/latest/bin
  - export ANDROID_SDK_ROOT=$HOME/sdk
  # create empty cfg file to prevent sdkmanager warning message
  - mkdir -p $HOME/.android && touch $HOME/.android/repositories.cfg

install:
  # accept licenses for all available packages that have not already been accepted
  - yes | sdkmanager --licenses >/dev/null

before_script:
  - chmod +x gradlew

jobs:
  include:
    - stage: build
      script: ./gradlew clean build
    - stage: assemble
      script: ./gradlew assembleDebug

before_cache:
  - rm -f  $HOME/.gradle/caches/modules-2/modules-2.lock
  - rm -fr $HOME/.gradle/caches/*/plugin-resolution/

cache:
  directories:
    - $HOME/.gradle/caches/
    - $HOME/.gradle/wrapper/
    - $HOME/.android/build-cache